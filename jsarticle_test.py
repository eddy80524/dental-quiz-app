#!/usr/bin/env python3
"""
段階的テスト - jsarticleのみ
"""

import subprocess
import os
import uuid

def test_jsarticle_only():
    """jsarticleのみでのテスト"""
    
    # 最小限のjsarticleテンプレート
    latex_content = r"""
\documentclass[11pt,a4paper,uplatex]{jsarticle}
\usepackage[utf8]{inputenc}
\usepackage[top=25mm,bottom=25mm,left=20mm,right=20mm]{geometry}

\title{歯科国家試験問題集（jsarticle版）}
\author{Generated by Dental DX PoC}
\date{\today}

\begin{document}
\maketitle

\section{問題 115A77}
科目: クラウンブリッジ学

問題:
40歳の女性。上顎左側歯列の咬み合わせの違和感を主訴として来院した。

選択肢:
A. ア
B. イ  
C. ウ
D. エ
E. オ

正解: C

\end{document}
"""
    
    # 一意なファイル名を生成
    unique_id = str(uuid.uuid4())[:8]
    base_name = f"jsarticle_test_{unique_id}"
    output_dir = "/tmp"
    
    tex_file = os.path.join(output_dir, f"{base_name}.tex")
    pdf_file = os.path.join(output_dir, f"{base_name}.pdf")
    
    print(f"📄 テストファイル: {tex_file}")
    
    # LaTeXファイルを作成
    with open(tex_file, 'w', encoding='utf-8') as f:
        f.write(latex_content)
    
    file_size = os.path.getsize(tex_file)
    print(f"✅ jsarticle LaTeXファイル作成完了: {file_size} バイト")
    
    try:
        # uplatexでコンパイル
        print("🔧 uplatexでコンパイル中...")
        result = subprocess.run(
            ["uplatex", "-halt-on-error", "-output-directory", output_dir, os.path.basename(tex_file)],
            cwd=output_dir,
            capture_output=True,
            text=True,
            timeout=60
        )
        
        if result.returncode == 0:
            print("✅ uplatexコンパイル成功")
            
            # DVI → PDF 変換
            dvi_file = os.path.join(output_dir, f"{base_name}.dvi")
            if os.path.exists(dvi_file):
                print("📄 DVI → PDF 変換中...")
                dvipdf_result = subprocess.run(
                    ["dvipdfmx", "-o", f"{base_name}.pdf", f"{base_name}.dvi"],
                    cwd=output_dir,
                    capture_output=True,
                    text=True,
                    timeout=30
                )
                
                if dvipdf_result.returncode == 0 and os.path.exists(pdf_file):
                    pdf_size = os.path.getsize(pdf_file)
                    print(f"🎉 jsarticle PDF生成成功！サイズ: {pdf_size} バイト")
                    print(f"📄 生成されたPDF: {pdf_file}")
                    return True
                else:
                    print(f"❌ DVI → PDF 変換失敗: {dvipdf_result.stderr}")
                    return False
            else:
                print("❌ DVIファイルが生成されませんでした")
                return False
        else:
            print(f"❌ uplatexコンパイル失敗:")
            print(result.stderr[:500])
            return False
            
    except Exception as e:
        print(f"❌ エラー: {str(e)}")
        return False

if __name__ == "__main__":
    print("🧪 jsarticle単体テスト開始")
    print("=" * 30)
    
    if test_jsarticle_only():
        print("✅ jsarticleテスト成功")
    else:
        print("❌ jsarticleテスト失敗")
